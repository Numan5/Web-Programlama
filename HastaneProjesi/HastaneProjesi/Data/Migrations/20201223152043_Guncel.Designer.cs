// <auto-generated />
using System;
using HastaneProjesi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HastaneProjesi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201223152043_Guncel")]
    partial class Guncel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HastaneProjesi.Models.Doktorlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DogumYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoliniklikId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnvanlarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoliniklikId");

                    b.HasIndex("UnvanlarId");

                    b.ToTable("Doktorlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Meryem",
                            Cinsiyet = 1,
                            DogumTarihi = new DateTime(1996, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Istanbul",
                            PoliniklikId = 1,
                            Soyad = "Çetiner",
                            UnvanlarId = 1
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Murat",
                            Cinsiyet = 0,
                            DogumTarihi = new DateTime(1995, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Ankara",
                            PoliniklikId = 3,
                            Soyad = "Gül",
                            UnvanlarId = 4
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Şule",
                            Cinsiyet = 1,
                            DogumTarihi = new DateTime(1990, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Burdur",
                            PoliniklikId = 2,
                            Soyad = "Piyaz",
                            UnvanlarId = 5
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Yavuz",
                            Cinsiyet = 0,
                            DogumTarihi = new DateTime(1986, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Sinop",
                            PoliniklikId = 2,
                            Soyad = "Selim",
                            UnvanlarId = 4
                        },
                        new
                        {
                            Id = 5,
                            Ad = "Cenk",
                            Cinsiyet = 0,
                            DogumTarihi = new DateTime(1989, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Samsun",
                            PoliniklikId = 4,
                            Soyad = "İnce",
                            UnvanlarId = 5
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.HastaGecmisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GecirdigiAmeliyatlar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GecirdigiHastaliklar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HastaSikayetiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HastaSikayetiId");

                    b.ToTable("HastaGecmisi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GecirdigiAmeliyatlar = "Yok",
                            GecirdigiHastaliklar = "Yok",
                            HastaSikayetiId = 1,
                            Tarih = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            GecirdigiAmeliyatlar = "Yok",
                            GecirdigiHastaliklar = "Yok",
                            HastaSikayetiId = 2,
                            Tarih = new DateTime(2020, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            GecirdigiAmeliyatlar = "Yok",
                            GecirdigiHastaliklar = "Yok",
                            HastaSikayetiId = 3,
                            Tarih = new DateTime(2020, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            GecirdigiAmeliyatlar = "Yok",
                            GecirdigiHastaliklar = "Yok",
                            HastaSikayetiId = 4,
                            Tarih = new DateTime(2020, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            GecirdigiAmeliyatlar = "Yok",
                            GecirdigiHastaliklar = "Yok",
                            HastaSikayetiId = 5,
                            Tarih = new DateTime(2020, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.HastaKabul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DoktorlarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("GelisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HastalarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoktorlarId");

                    b.HasIndex("HastalarId");

                    b.ToTable("HastaKabul");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoktorlarId = 3,
                            GelisTarihi = new DateTime(2020, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HastalarId = 1
                        },
                        new
                        {
                            Id = 2,
                            DoktorlarId = 1,
                            GelisTarihi = new DateTime(2020, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HastalarId = 2
                        },
                        new
                        {
                            Id = 3,
                            DoktorlarId = 4,
                            GelisTarihi = new DateTime(2020, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HastalarId = 3
                        },
                        new
                        {
                            Id = 4,
                            DoktorlarId = 2,
                            GelisTarihi = new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HastalarId = 4
                        },
                        new
                        {
                            Id = 5,
                            DoktorlarId = 1,
                            GelisTarihi = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HastalarId = 5
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.HastaSikayeti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HastaKabulId")
                        .HasColumnType("int");

                    b.Property<string>("HastaSikayet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HastaKabulId");

                    b.ToTable("HastaSikayeti");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HastaKabulId = 1,
                            HastaSikayet = "Hemogram Yetmezliği"
                        },
                        new
                        {
                            Id = 2,
                            HastaKabulId = 2,
                            HastaSikayet = "Alkalen Fosfataz Hastalığı"
                        },
                        new
                        {
                            Id = 3,
                            HastaKabulId = 3,
                            HastaSikayet = "Kreatinin Klerensi"
                        },
                        new
                        {
                            Id = 4,
                            HastaKabulId = 4,
                            HastaSikayet = "Asit Fosfataz"
                        },
                        new
                        {
                            Id = 5,
                            HastaKabulId = 5,
                            HastaSikayet = "Prostat-Spesifik Antijen"
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.Hastalar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DogumYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KanGrubuId")
                        .HasColumnType("int");

                    b.Property<int>("MedeniHali")
                        .HasColumnType("int");

                    b.Property<string>("Meslek")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KanGrubuId");

                    b.ToTable("Hastalar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Aysu",
                            Cinsiyet = 1,
                            DogumTarihi = new DateTime(1981, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Bartın",
                            KanGrubuId = 2,
                            MedeniHali = 1,
                            Meslek = "Öğretmen",
                            Soyad = "Şirin"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Begüm",
                            Cinsiyet = 1,
                            DogumTarihi = new DateTime(1983, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Yozgat",
                            KanGrubuId = 3,
                            MedeniHali = 0,
                            Meslek = "Öğretmen",
                            Soyad = "Yavuz"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Arda",
                            Cinsiyet = 0,
                            DogumTarihi = new DateTime(1984, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Kayseri",
                            KanGrubuId = 1,
                            MedeniHali = 1,
                            Meslek = "Öğretmen",
                            Soyad = "Öz"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Mert",
                            Cinsiyet = 0,
                            DogumTarihi = new DateTime(1988, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Çorum",
                            KanGrubuId = 5,
                            MedeniHali = 1,
                            Meslek = "Öğretmen",
                            Soyad = "Şirin"
                        },
                        new
                        {
                            Id = 5,
                            Ad = "Cihan",
                            Cinsiyet = 1,
                            DogumTarihi = new DateTime(1991, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DogumYeri = "Tokat",
                            KanGrubuId = 2,
                            MedeniHali = 1,
                            Meslek = "Öğretmen",
                            Soyad = "Yiğit"
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.Hastaneler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hastaneler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Devlet Hastanesi"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Özel Aktıp Hastanesi"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Özel Medikar Hastanesi"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Atatürk Hastanesi"
                        },
                        new
                        {
                            Id = 5,
                            Ad = "Araştırma Hastanesi"
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.Ilaclar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Adet")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Fiyat")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ReceteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceteId");

                    b.ToTable("Ilaclar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adet = 2,
                            Fiyat = 10,
                            ReceteId = 1
                        },
                        new
                        {
                            Id = 2,
                            Adet = 3,
                            Fiyat = 20,
                            ReceteId = 2
                        },
                        new
                        {
                            Id = 3,
                            Adet = 1,
                            Fiyat = 30,
                            ReceteId = 3
                        },
                        new
                        {
                            Id = 4,
                            Adet = 2,
                            Fiyat = 50,
                            ReceteId = 4
                        },
                        new
                        {
                            Id = 5,
                            Adet = 1,
                            Fiyat = 165,
                            ReceteId = 5
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.KanGrubu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KanGrubuAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KanGrubu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KanGrubuAd = "O Rh-"
                        },
                        new
                        {
                            Id = 2,
                            KanGrubuAd = "O Rh+"
                        },
                        new
                        {
                            Id = 3,
                            KanGrubuAd = "A Rh+ "
                        },
                        new
                        {
                            Id = 4,
                            KanGrubuAd = "A Rh-"
                        },
                        new
                        {
                            Id = 5,
                            KanGrubuAd = "B Rh-"
                        },
                        new
                        {
                            Id = 6,
                            KanGrubuAd = "B Rh+"
                        },
                        new
                        {
                            Id = 7,
                            KanGrubuAd = "AB Rh+"
                        },
                        new
                        {
                            Id = 8,
                            KanGrubuAd = "AB Rh-"
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.Poliniklik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HastanelerId")
                        .HasColumnType("int");

                    b.Property<string>("PolinikAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HastanelerId");

                    b.ToTable("Poliniklik");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HastanelerId = 1,
                            PolinikAd = "Dâhiliye Polikliniği"
                        },
                        new
                        {
                            Id = 2,
                            HastanelerId = 1,
                            PolinikAd = "Gastroenteroloji Polikliniği"
                        },
                        new
                        {
                            Id = 3,
                            HastanelerId = 2,
                            PolinikAd = "KBB Polikliniği"
                        },
                        new
                        {
                            Id = 4,
                            HastanelerId = 3,
                            PolinikAd = "Psikiyatri Polikliniği"
                        },
                        new
                        {
                            Id = 5,
                            HastanelerId = 4,
                            PolinikAd = "Ortopedi Polikliniği"
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.Recete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IlacAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TahlillerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TahlillerId");

                    b.ToTable("Recete");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IlacAd = "AFINITOR 10 mg tablet",
                            TahlillerId = 1
                        },
                        new
                        {
                            Id = 2,
                            IlacAd = "ALOMIDE %0.1 Steril Göz Damlası",
                            TahlillerId = 2
                        },
                        new
                        {
                            Id = 3,
                            IlacAd = "Arzerra 100 mg IV infüzyonluk çözelti konsantresi içeren flakon",
                            TahlillerId = 3
                        },
                        new
                        {
                            Id = 4,
                            IlacAd = "AZARGA",
                            TahlillerId = 4
                        },
                        new
                        {
                            Id = 5,
                            IlacAd = "BETOPTIC %0.5 Steril Oftalmik Çözelti",
                            TahlillerId = 5
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.Tahliller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HastaGecmisiId")
                        .HasColumnType("int");

                    b.Property<string>("TahlilAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TahlilSonucu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HastaGecmisiId");

                    b.ToTable("Tahliller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HastaGecmisiId = 1,
                            TahlilAd = "Sedimantasyon",
                            TahlilSonucu = "Kanın çökme hızıdır. İltihabi durumlar, romatizmal hastalıklar, mikrobik durumlar, Kan hastalıklarında, bazı kanserlerde yüksek bulunur. Aşırı kan yapımında (polisitemi) düşük çıkar"
                        },
                        new
                        {
                            Id = 2,
                            HastaGecmisiId = 2,
                            TahlilAd = "Üre-Bun- Kreatinin",
                            TahlilSonucu = "Böbreklerin çalışmasını gösterir. Böbrek yetersizliğinde yüksek bulunur. Ürik asit: Protein yıkımının son ürünüdür.Gut hastalığında ve böbrek yetersizliğinde yüksek çıkar.Aşırı proteinle beslenenlerde ve doku yıkımı olan durumlarda(kan hastalıklarında) da yüksek çıkabilir."
                        },
                        new
                        {
                            Id = 3,
                            HastaGecmisiId = 3,
                            TahlilAd = "AST-ALT",
                            TahlilSonucu = "Karaciğer fonksiyonlarını gösterir. AST ayrıca kalp, kas hastalıklarında ve alkol alanlarda da yüksek bulunabilir"
                        },
                        new
                        {
                            Id = 4,
                            HastaGecmisiId = 4,
                            TahlilAd = "Glukoz",
                            TahlilSonucu = "Kan şekerini gösterir"
                        },
                        new
                        {
                            Id = 5,
                            HastaGecmisiId = 5,
                            TahlilAd = "GGT-ALP",
                            TahlilSonucu = "Karaciğer ve safra yolları hastalıklarında yüksek çıkar. ALP aynı zamanda kemik hastalıklarını da gösterebilir. Çocuklarda ve gebelerde fizyolojik olarak yüksek bulunabilir."
                        });
                });

            modelBuilder.Entity("HastaneProjesi.Models.Unvanlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UnvanAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Unvanlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UnvanAd = "Pratisyen Doktor"
                        },
                        new
                        {
                            Id = 2,
                            UnvanAd = "Uzman Doktor"
                        },
                        new
                        {
                            Id = 3,
                            UnvanAd = "Operatör Doktor"
                        },
                        new
                        {
                            Id = 4,
                            UnvanAd = "Yardımcı Doçent"
                        },
                        new
                        {
                            Id = 5,
                            UnvanAd = " Doçent"
                        },
                        new
                        {
                            Id = 6,
                            UnvanAd = " Profesör"
                        },
                        new
                        {
                            Id = 7,
                            UnvanAd = "Ordinaryus "
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HastaneProjesi.Models.Doktorlar", b =>
                {
                    b.HasOne("HastaneProjesi.Models.Poliniklik", "Poliniklik")
                        .WithMany()
                        .HasForeignKey("PoliniklikId");

                    b.HasOne("HastaneProjesi.Models.Unvanlar", "Unvanlar")
                        .WithMany()
                        .HasForeignKey("UnvanlarId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.HastaGecmisi", b =>
                {
                    b.HasOne("HastaneProjesi.Models.HastaSikayeti", "HastaSikayeti")
                        .WithMany()
                        .HasForeignKey("HastaSikayetiId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.HastaKabul", b =>
                {
                    b.HasOne("HastaneProjesi.Models.Doktorlar", "Doktorlar")
                        .WithMany()
                        .HasForeignKey("DoktorlarId");

                    b.HasOne("HastaneProjesi.Models.Hastalar", "Hastalar")
                        .WithMany()
                        .HasForeignKey("HastalarId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.HastaSikayeti", b =>
                {
                    b.HasOne("HastaneProjesi.Models.HastaKabul", "HastaKabul")
                        .WithMany()
                        .HasForeignKey("HastaKabulId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.Hastalar", b =>
                {
                    b.HasOne("HastaneProjesi.Models.KanGrubu", "KanGrubu")
                        .WithMany()
                        .HasForeignKey("KanGrubuId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.Ilaclar", b =>
                {
                    b.HasOne("HastaneProjesi.Models.Recete", "Recete")
                        .WithMany()
                        .HasForeignKey("ReceteId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.Poliniklik", b =>
                {
                    b.HasOne("HastaneProjesi.Models.Hastaneler", "Hastaneler")
                        .WithMany()
                        .HasForeignKey("HastanelerId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.Recete", b =>
                {
                    b.HasOne("HastaneProjesi.Models.Tahliller", "Tahliller")
                        .WithMany()
                        .HasForeignKey("TahlillerId");
                });

            modelBuilder.Entity("HastaneProjesi.Models.Tahliller", b =>
                {
                    b.HasOne("HastaneProjesi.Models.HastaGecmisi", "hastaGecmisi")
                        .WithMany()
                        .HasForeignKey("HastaGecmisiId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
